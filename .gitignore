# =============================================================================
# Python .gitignore for Machine Learning Project
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# C extensions
*.c

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# Machine Learning / Data Science Specific
# =============================================================================

# Data files - NEVER COMMIT DATA TO GIT!
data/raw/
data/processed/
data/dictionary/
*.csv
*.json
*.jsonl
*.parquet
*.feather
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.npy
*.npz
*.tsv
*.txt

# Model files - LARGE FILES!
models/
*.pth
*.pt
*.bin
*.safetensors
*.onnx
*.tflite

# Checkpoints and training outputs
checkpoints/
runs/
logs/
experiments/
outputs/
results/
*.log
tensorboard/
wandb/
mlruns/

# Dataset cache
.cache/
.huggingface/
.corpus/

# Jupyter
*.ipynb

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# KDE
.directory

# =============================================================================
# Project Specific (Add your project-specific ignores below)
# =============================================================================

# HuggingFace cache (can be very large)
.huggingface/

# Weights and Biases
wandb/

# DVC (if you use Data Version Control)
.dvc/

# MLflow
mlruns/

# Temporary files
*.tmp
*.temp

# Large experiment results
experiments/
notebooks/experiments/

# Config files with secrets (create template instead)
config/secrets.yaml
config/keys.json
*.env
.env.local
.env.production

# Large language models (if any)
models/llms/
models/pretrained/

# =============================================================================
# Optional: Uncomment if you want to keep these in version control
# =============================================================================

# !data/raw/README.md          # Keep documentation about data
# !data/processed/README.md    # Keep documentation about processed data
# !models/README.md           # Keep documentation about models

# =============================================================================
# Notes:
# - Data files (*.json, *.csv, etc.) are ignored to prevent large repo size
# - Model files (*.pth, *.bin, etc.) are ignored due to large size
# - Environment files (.venv/) are ignored for portability
# - Cache files are ignored to avoid unnecessary commits
# =============================================================================